// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

model User {
  id                 String          @id @default(uuid())
  username           String          @unique
  password           String
  email              String          @unique
  profileImgUrl      String?
  // chatRoomLinks  ChatRoomUser[]
  chatRooms          ChatRoom[]
  friends            UserFriend[]
  friendRequests     FriendRequest[] @relation(name: "received")
  sentFriendRequests FriendRequest[] @relation(name: "sent")
  messages           Message[]
}

model UserFriend {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

model FriendRequest {
  id               String @id @default(uuid())
  requestingUser   User   @relation(name: "sent", fields: [requestingUserId], references: [id], onDelete: Cascade)
  requestingUserId String
  receivingUser    User   @relation(name: "received", fields: [receivingUserId], references: [id], onDelete: Cascade)
  receivingUserId  String
}

model ChatRoom {
  id       String    @id @default(uuid())
  name     String?
  users    User[]
  messages Message[]
}

model Message {
  id         String   @id @default(uuid())
  text       String
  author     User     @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId   String
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id], onDelete: Cascade)
  chatRoomId String
  timeStamp  DateTime @default(now())
}

// model ChatRoomUser {
//   id         String   @id @default(uuid())
//   chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id], onDelete: Cascade)
//   chatRoomId String
//   user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
//   userId     String
// }
